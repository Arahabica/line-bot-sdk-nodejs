{{>licenseInfo}}
{{#models}}
{{#model}}
{{#tsImports}}
import { {{classname}} } from '{{filename}}';
{{/tsImports}}

{{#discriminator}}
{{#mappedModels}}
import { {{modelName}} } from './models';
{{/mappedModels}}

export type {{classname}} =
{{#mappedModels}}
        {{^-first}}| {{/-first}}{{modelName}} // {{mappingName}}
{{/mappedModels}}
        | Unknown{{classname}}
;

export type Unknown{{classname}} = {{classname}}Base & {
    [key: string]: unknown;
};
{{/discriminator}}

{{#description}}
/**
* {{{.}}}
*/
{{/description}}
{{^isEnum}}
{{#parent}}
import { {{{.}}}Base } from './models';
{{/parent}}
export type {{classname}}{{#discriminator}}Base{{/discriminator}} = {{#parent}}{{{.}}}Base & {{/parent}} { {{#vendorExtensions.x-selector}}
    {{vendorExtensions.x-selector.propertyName}}: "{{vendorExtensions.x-selector.mappingName}}",{{/vendorExtensions.x-selector}}
{{#vars}}
    /**
{{#description}}
    * {{{.}}}
{{/description}}
    {{#externalDocumentation}}
     * {{description}}
     * @see <a href="{{url}}">{{name}} Documentation</a>
    {{/externalDocumentation}}
    */
    '{{name}}'{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}}/*{{#defaultValue}} = {{#isEnum}}{{classname}}.{{/isEnum}}{{{.}}}{{/defaultValue}}*/;
{{/vars}}
}

{{#hasEnums}}
export namespace {{classname}} {
{{#vars}}
{{#isEnum}}
    export type {{enumName}} = 
        {{#allowableValues}}
        {{#enumVars}}
            {{^-first}}| {{/-first}}{{{value}}}
        {{/enumVars}}
        {{/allowableValues}}
    ;
{{/isEnum}}
{{/vars}}
}
{{/hasEnums}}
{{/isEnum}}
{{#isEnum}}
export type {{classname}} =
    {{#allowableValues}}
    {{#enumVars}}
        {{^-first}}| {{/-first}}{{{value}}}
    {{/enumVars}}
    {{/allowableValues}}
;
{{/isEnum}}
{{/model}}
{{/models}}