/**
 * LINE Messaging API
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { RequestFile } from './models';
import { Action } from './action';
import { FlexBoxBackground } from './flexBoxBackground';
import { FlexComponent } from './flexComponent';

export class FlexBox extends FlexComponent {
    'layout'?: FlexBox.LayoutEnum;
    'flex'?: number;
    'contents'?: Array<FlexComponent>;
    'spacing'?: string;
    'margin'?: string;
    'position'?: FlexBox.PositionEnum;
    'offsetTop'?: string;
    'offsetBottom'?: string;
    'offsetStart'?: string;
    'offsetEnd'?: string;
    'backgroundColor'?: string;
    'borderColor'?: string;
    'borderWidth'?: string;
    'cornerRadius'?: string;
    'width'?: string;
    'maxWidth'?: string;
    'height'?: string;
    'maxHeight'?: string;
    'paddingAll'?: string;
    'paddingTop'?: string;
    'paddingBottom'?: string;
    'paddingStart'?: string;
    'paddingEnd'?: string;
    'action'?: Action;
    'justifyContent'?: FlexBox.JustifyContentEnum;
    'alignItems'?: FlexBox.AlignItemsEnum;
    'background'?: FlexBoxBackground;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "layout",
            "baseName": "layout",
            "type": "FlexBox.LayoutEnum"
        },
        {
            "name": "flex",
            "baseName": "flex",
            "type": "number"
        },
        {
            "name": "contents",
            "baseName": "contents",
            "type": "Array<FlexComponent>"
        },
        {
            "name": "spacing",
            "baseName": "spacing",
            "type": "string"
        },
        {
            "name": "margin",
            "baseName": "margin",
            "type": "string"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "FlexBox.PositionEnum"
        },
        {
            "name": "offsetTop",
            "baseName": "offsetTop",
            "type": "string"
        },
        {
            "name": "offsetBottom",
            "baseName": "offsetBottom",
            "type": "string"
        },
        {
            "name": "offsetStart",
            "baseName": "offsetStart",
            "type": "string"
        },
        {
            "name": "offsetEnd",
            "baseName": "offsetEnd",
            "type": "string"
        },
        {
            "name": "backgroundColor",
            "baseName": "backgroundColor",
            "type": "string"
        },
        {
            "name": "borderColor",
            "baseName": "borderColor",
            "type": "string"
        },
        {
            "name": "borderWidth",
            "baseName": "borderWidth",
            "type": "string"
        },
        {
            "name": "cornerRadius",
            "baseName": "cornerRadius",
            "type": "string"
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "string"
        },
        {
            "name": "maxWidth",
            "baseName": "maxWidth",
            "type": "string"
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "string"
        },
        {
            "name": "maxHeight",
            "baseName": "maxHeight",
            "type": "string"
        },
        {
            "name": "paddingAll",
            "baseName": "paddingAll",
            "type": "string"
        },
        {
            "name": "paddingTop",
            "baseName": "paddingTop",
            "type": "string"
        },
        {
            "name": "paddingBottom",
            "baseName": "paddingBottom",
            "type": "string"
        },
        {
            "name": "paddingStart",
            "baseName": "paddingStart",
            "type": "string"
        },
        {
            "name": "paddingEnd",
            "baseName": "paddingEnd",
            "type": "string"
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "Action"
        },
        {
            "name": "justifyContent",
            "baseName": "justifyContent",
            "type": "FlexBox.JustifyContentEnum"
        },
        {
            "name": "alignItems",
            "baseName": "alignItems",
            "type": "FlexBox.AlignItemsEnum"
        },
        {
            "name": "background",
            "baseName": "background",
            "type": "FlexBoxBackground"
        }    ];

    static getAttributeTypeMap() {
        return super.getAttributeTypeMap().concat(FlexBox.attributeTypeMap);
    }
}

export namespace FlexBox {
    export enum LayoutEnum {
        Horizontal = <any> 'horizontal',
        Vertical = <any> 'vertical',
        Baseline = <any> 'baseline'
    }
    export enum PositionEnum {
        Relative = <any> 'relative',
        Absolute = <any> 'absolute'
    }
    export enum JustifyContentEnum {
        Center = <any> 'center',
        FlexStart = <any> 'flex-start',
        FlexEnd = <any> 'flex-end',
        SpaceBetween = <any> 'space-between',
        SpaceAround = <any> 'space-around',
        SpaceEvenly = <any> 'space-evenly'
    }
    export enum AlignItemsEnum {
        Center = <any> 'center',
        FlexStart = <any> 'flex-start',
        FlexEnd = <any> 'flex-end'
    }
}
